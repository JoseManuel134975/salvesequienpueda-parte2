name: Generate Documentation & deploy on Terraform/AWS

on:
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Ensure JSDoc is executable
        run: chmod +x node_modules/.bin/jsdoc # Esto asegura que jsdoc tenga permisos de ejecución

      - name: Generate documentation
        run: npm run docs  # Ejecuta el script que genera la documentación

      - name: Upload Documentation
        uses: actions/upload-artifact@v4 # Acción que crea un artefacto a partir de la documentación
        with:
          name: docs
          path: docs/  # Ruta donde se genera la documentación

      - name: Deploy to GitHub Pages  # Publica en GitHub Pages
        uses: peaceiris/actions-gh-pages@v3 # Publica en la rama gh-pages los archivos del publish_dir (más abajo)
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Token para autenticación
          publish_dir: ./docs  # Directorio de publicación. Los archivos de documentación se recogen de este directorio

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4 # Acción para autenticarse en AWS
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # CLAVE PRIVADA
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # TOKEN TEMPORAL
          aws-region: "us-east-1" # Región
            
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1 # Acción para configurar Terraform
        with:
          terraform_version: 1.0.0  # Cambia según la versión de Terraform que desees usar

      # Inicializa y destruye automáticamente (si es que hay) el entorno de Terraform (archivos) 
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform
      - name: Destroy before
        run: terraform destroy -auto-approve
        working-directory: ./terraform 

      - name: Terraform plan
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Upload Terraform State
        uses: actions/upload-artifact@v4 # Carga como artefacto el estado de Terraform después de sufrir cambios
        with:
          name: terraform-state
          path: ./terraform/terraform.tfstate  # Cambia a la ruta correcta
