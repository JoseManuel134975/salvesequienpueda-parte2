- Extensión necesaria para conectar Jira con GitHub: Github for Jira >> # Desde Jira podemos crear una rama y asociarla a una tarea *
# * Después desde GitHub la podemos ver. ¡ES IMPORTANTE QUE EL NOMBRE DE LA RAMA CONTENGA LA CLAVE DE LA TAREA (EJ: KAN-15)! *
# * Desde Jira podemos ver los commits y pull requests realizados entrando a la tarea y usando la app (extensión)

- Despliegue automático con GitHub Action >> # El archivo .yml se guardará en el directorio .github/workflows
# Archivo.yml -> Usar JSDoc para generar la documentación de nuestros archivos .js *
# -> Usar el token de autenticación por defecto de GitHub si nos da pereza *
# -> Guardar en los secrets (Secretos de los flujos de trabajo) las diferentes credenciales necesarias para AWS y usarlas en el flujo *
# -> Usar Terraform para crear la infraestructura

# ¡IMPORTANTE! => Automatizar (si es posible) la destrucción de la infraestructura y usar artefactos (si es necesario)

- Infraestructura con Terraform y despliegue en AWS >> # Crear VPC *
# Crear subred pública *
# Crear instancia con un servidor web Apache instalado para mostrar la página web *
# Activar módulo de PHP en Apache

¡IMPORTANTE! => Terraform: Usar recursos (resource), variables y par de claves (AWS -> SSH) *
# -> El script user_data.sh debe descargar el repositorio e instalar los paquetes necesarios en nuestro Linux (aparte de lo del módulo PHP) 
